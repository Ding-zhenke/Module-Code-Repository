C51 COMPILER V9.53.0.0   AD9850                                                            07/06/2019 12:13:34 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE AD9850
OBJECT MODULE PLACED IN ad9850.OBJ
COMPILER INVOKED BY: E:\Programe\keil 51\C51\BIN\C51.EXE ad9850.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //                  子程序说明                       //
   2          //***************************************************//
   3          //函数1:  ad9850_reset()
   4          //        复位ad9850，之后为并口写入模式        
   5          //函数2:  ad9850_reset_serial()
   6          //        复位ad9850，之后为串口写入模式
   7          //函数3:  ad9850_wr_parrel(unsigned char w0,double frequence)
   8          //        并口写ad9850数据，w0为ad9850中w0的数据，frequence
   9          //        为写入的频率  
  10          //函数4:  ad9850_wr_serial(unsigned char w0,double frequence)
  11          //        串口写ad9850数据，w0为ad9850中w0的数据，frequence
  12          //        为写入的频率  
  13          //需定义的位：
  14                   //ad9850_w_clk    ;
  15                   //ad9850_fq_up    ;
  16                   //ad9850_rest     ;
  17                   //ad9850_bit_data ;
  18          //例：
  19                   //sbit ad9850_w_clk    =P2^2;
  20                   //sbit ad9850_fq_up    =P2^1;
  21                   //sbit ad9850_rest     =P2^0;
  22                   //sbit ad9850_bit_data =P1^7;
  23          //***************************************************//
  24          //                 写数据说明                        //
  25          //***************************************************//
  26          //写数据例：
  27          //       ad9850_reset()
  28          //       wr_lcd02_data(unsigned char x)
  29          //       ad9850_wr_parrel(0x01,1000)
  30          //       ad9850_wr_serial(0x01,1000)
  31          //***************************************************//
  32          //---------------------------------------------------//
  33          //                   程序                            //
  34          //---------------------------------------------------//
  35          # include <reg51.h>
  36          # include <stdio.h>
  37          # include <intrins.h>
  38          sbit ad9850_w_clk    =P2^2;  //P2.2口接ad9850的w_clk脚/PIN7
  39          sbit ad9850_fq_up    =P2^1;  //P2.1口接ad9850的fq_up脚/PIN8
  40          sbit ad9850_rest     =P2^0;  //P2.0口接ad9850的rest脚/PIN12
  41          sbit ad9850_bit_data =P1^7;  //P1.7口接ad9850的D7脚/PIN25
  42          //P1为8位数据口
  43          //***************************************************//
  44          //              ad9850复位(并口模式)                 //
  45          //---------------------------------------------------//
  46          void ad9850_reset()
  47          {
  48   1      ad9850_w_clk=0;
  49   1      ad9850_fq_up=0;
  50   1      //rest信号
  51   1      ad9850_rest=0;
  52   1      ad9850_rest=1;
  53   1      ad9850_rest=0;
  54   1      }
  55          //***************************************************//
C51 COMPILER V9.53.0.0   AD9850                                                            07/06/2019 12:13:34 PAGE 2   

  56          //              ad9850复位(并口模式)                 //
  57          //---------------------------------------------------//
  58          void ad9850_reset_serial()
  59          {
  60   1      ad9850_w_clk=0;
  61   1      ad9850_fq_up=0;
  62   1      //rest信号
  63   1      ad9850_rest=0;
  64   1      ad9850_rest=1;
  65   1      ad9850_rest=0;
  66   1      //w_clk信号
  67   1      ad9850_w_clk=0;
  68   1      ad9850_w_clk=1;
  69   1      ad9850_w_clk=0;
  70   1      //fq_up信号
  71   1      ad9850_fq_up=0;
  72   1      ad9850_fq_up=1;
  73   1      ad9850_fq_up=0;
  74   1      }
  75          //***************************************************//
  76          //          向ad9850中写命令与数据(并口)             //
  77          //---------------------------------------------------//
  78          void ad9850_wr_parrel(unsigned char w0,double frequence)
  79          {
  80   1      unsigned char w;
  81   1      long int y;
  82   1      double x;
  83   1      //计算频率的HEX值
  84   1      x=4294967295/125;//适合125M晶振
  85   1      //如果时钟频率不为125MHZ，修改该处的频率值，单位MHz ！！！
  86   1      frequence=frequence/1000000;
  87   1      frequence=frequence*x;
  88   1      y=frequence;
  89   1      //写w0数据
  90   1      w=w0;   
  91   1      P1=w;      //w0
  92   1      ad9850_w_clk=1;
  93   1      ad9850_w_clk=0;
  94   1      //写w1数据
  95   1      w=(y>>24);
  96   1      P1=w;      //w1
  97   1      ad9850_w_clk=1;
  98   1      ad9850_w_clk=0;
  99   1      //写w2数据
 100   1      w=(y>>16);
 101   1      P1=w;      //w2
 102   1      ad9850_w_clk=1;
 103   1      ad9850_w_clk=0;
 104   1      //写w3数据
 105   1      w=(y>>8);
 106   1      P1=w;      //w3
 107   1      ad9850_w_clk=1;
 108   1      ad9850_w_clk=0;
 109   1      //写w4数据
 110   1      w=(y>>=0);
 111   1      P1=w;      //w4
 112   1      ad9850_w_clk=1;
 113   1      ad9850_w_clk=0;
 114   1      //移入始能
 115   1      ad9850_fq_up=1;
 116   1      ad9850_fq_up=0;
 117   1      }
C51 COMPILER V9.53.0.0   AD9850                                                            07/06/2019 12:13:34 PAGE 3   

 118          //***************************************************//
 119          //          向ad9850中写命令与数据(串口)             //
 120          //---------------------------------------------------//
 121          void ad9850_wr_serial(unsigned char w0,double frequence)
 122          {
 123   1      unsigned char i,w;
 124   1      long int y;
 125   1      double x;
 126   1      //计算频率的HEX值
 127   1      x=4294967295/125;//适合125M晶振
 128   1      //如果时钟频率不为180MHZ，修改该处的频率值，单位MHz  ！！！
 129   1      frequence=frequence/1000000;
 130   1      frequence=frequence*x;
 131   1      y=frequence;
 132   1      //写w4数据
 133   1      w=(y>>=0);
 134   1      for(i=0;i<8;i++)
 135   1      {
 136   2      ad9850_bit_data=(w>>i)&0x01;
 137   2      ad9850_w_clk=1;
 138   2      ad9850_w_clk=0;
 139   2      }
 140   1      //写w3数据
 141   1      w=(y>>8);
 142   1      for(i=0;i<8;i++)
 143   1      {
 144   2      ad9850_bit_data=(w>>i)&0x01;
 145   2      ad9850_w_clk=1;
 146   2      ad9850_w_clk=0;
 147   2      }
 148   1      //写w2数据
 149   1      w=(y>>16);
 150   1      for(i=0;i<8;i++)
 151   1      {
 152   2      ad9850_bit_data=(w>>i)&0x01;
 153   2      ad9850_w_clk=1;
 154   2      ad9850_w_clk=0;
 155   2      }
 156   1      //写w1数据
 157   1      w=(y>>24);
 158   1      for(i=0;i<8;i++)
 159   1      {
 160   2      ad9850_bit_data=(w>>i)&0x01;
 161   2      ad9850_w_clk=1;
 162   2      ad9850_w_clk=0;
 163   2      }
 164   1      //写w0数据
 165   1      w=w0;   
 166   1      for(i=0;i<8;i++)
 167   1      {
 168   2      ad9850_bit_data=(w>>i)&0x01;
 169   2      ad9850_w_clk=1;
 170   2      ad9850_w_clk=0;
 171   2      }
 172   1      //移入始能
 173   1      ad9850_fq_up=1;
 174   1      ad9850_fq_up=0;
 175   1      }
 176          //***************************************************//
 177          //                   测试程序1000Hz                  //
 178          //---------------------------------------------------//
 179          main()
C51 COMPILER V9.53.0.0   AD9850                                                            07/06/2019 12:13:34 PAGE 4   

 180          {
 181   1      P0=0x00;
 182   1      P1=0x00;
 183   1      P2=0x00;
 184   1      P3=0x00;
 185   1      //---------------------------------------------------//
 186   1      //并行写1000Hz程序
 187   1      ad9850_reset();
 188   1      ad9850_wr_parrel(0x00,1000);
 189   1      //---------------------------------------------------//
 190   1      while(1)
 191   1      {
 192   2      }
 193   1      }
 194          
 195          
 196          
 197          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    479    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
