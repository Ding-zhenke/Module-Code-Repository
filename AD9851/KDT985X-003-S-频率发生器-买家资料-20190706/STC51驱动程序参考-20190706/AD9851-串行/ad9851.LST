C51 COMPILER V9.53.0.0   AD9851                                                            07/06/2019 12:14:58 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE AD9851
OBJECT MODULE PLACED IN ad9851.OBJ
COMPILER INVOKED BY: E:\Programe\keil 51\C51\BIN\C51.EXE ad9851.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          //***************************************************//
   2          //                  子程序说明                       //
   3          //***************************************************//
   4          //函数1:  ad9851_reset()
   5          //        复位ad9851，之后为并口写入模式        
   6          //函数2:  ad9851_reset_serial()
   7          //        复位ad9851，之后为串口写入模式
   8          //函数3:  ad9851_wr_parrel(unsigned char w0,double frequence)
   9          //        并口写ad9851数据，w0为ad9851中w0的数据，frequence
  10          //        为写入的频率  
  11          //函数4:  ad9851_wr_serial(unsigned char w0,double frequence)
  12          //        串口写ad9851数据，w0为ad9851中w0的数据，frequence
  13          //        为写入的频率  
  14          //需定义的位：
  15                   //ad9851_w_clk    ;
  16                   //ad9851_fq_up    ;
  17                   //ad9851_rest     ;
  18                   //ad9851_bit_data ;
  19          //例：
  20                   //sbit ad9851_w_clk    =P2^2;
  21                   //sbit ad9851_fq_up    =P2^1;
  22                   //sbit ad9851_rest     =P2^0;
  23                   //sbit ad9851_bit_data =P1^7;
  24          //***************************************************//
  25          //                 写数据说明                        //
  26          //***************************************************//
  27          //写数据例：
  28          //       ad9851_reset()
  29          //       wr_lcd02_data(unsigned char x)
  30          //       ad9851_wr_parrel(0x01,1000)
  31          //       ad9851_wr_serial(0x01,1000)
  32          //***************************************************//
  33          //---------------------------------------------------//
  34          //                   程序                            //
  35          //---------------------------------------------------//
  36          # include <reg51.h>
  37          # include <stdio.h>
  38          # include <intrins.h>
  39          sbit ad9851_w_clk    =P2^2;  //P2.2口接AD9851的w_clk脚/PIN7
  40          sbit ad9851_fq_up    =P2^1;  //P2.1口接AD9851的fq_up脚/PIN8
  41          sbit ad9851_rest     =P2^0;  //P2.0口接AD9851的rest脚/PIN12
  42          sbit ad9851_bit_data =P1^7;  //P1.7口接AD9851的D7脚/PIN25
  43          //P1为8位数据口
  44          //***************************************************//
  45          //              ad9851复位(并口模式)                 //
  46          //---------------------------------------------------//
  47          void ad9851_reset()
  48          {
  49   1      ad9851_w_clk=0;
  50   1      ad9851_fq_up=0;
  51   1      //rest信号
  52   1      ad9851_rest=0;
  53   1      ad9851_rest=1;
  54   1      ad9851_rest=0;
  55   1      }
C51 COMPILER V9.53.0.0   AD9851                                                            07/06/2019 12:14:58 PAGE 2   

  56          //***************************************************//
  57          //              ad9851复位(并口模式)                 //
  58          //---------------------------------------------------//
  59          void ad9851_reset_serial()
  60          {
  61   1      ad9851_w_clk=0;
  62   1      ad9851_fq_up=0;
  63   1      //rest信号
  64   1      ad9851_rest=0;
  65   1      ad9851_rest=1;
  66   1      ad9851_rest=0;
  67   1      //w_clk信号
  68   1      ad9851_w_clk=0;
  69   1      ad9851_w_clk=1;
  70   1      ad9851_w_clk=0;
  71   1      //fq_up信号
  72   1      ad9851_fq_up=0;
  73   1      ad9851_fq_up=1;
  74   1      ad9851_fq_up=0;
  75   1      }
  76          //***************************************************//
  77          //          向ad9851中写命令与数据(并口)             //
  78          //---------------------------------------------------//
  79          void ad9851_wr_parrel(unsigned char w0,double frequence)
  80          {
  81   1      unsigned char w;
  82   1      long int y;
  83   1      double x;
  84   1      //计算频率的HEX值
  85   1      x=4294967295/180;//适合180M晶振/180为最终时钟频率（或30M六倍频）
  86   1      //如果时钟频率不为180MHZ，修改该处的频率值，单位MHz ！！！
  87   1      frequence=frequence/1000000;
  88   1      frequence=frequence*x;
  89   1      y=frequence;
  90   1      //写w0数据
  91   1      w=w0;   
  92   1      P1=w;      //w0
  93   1      ad9851_w_clk=1;
  94   1      ad9851_w_clk=0;
  95   1      //写w1数据
  96   1      w=(y>>24);
  97   1      P1=w;      //w1
  98   1      ad9851_w_clk=1;
  99   1      ad9851_w_clk=0;
 100   1      //写w2数据
 101   1      w=(y>>16);
 102   1      P1=w;      //w2
 103   1      ad9851_w_clk=1;
 104   1      ad9851_w_clk=0;
 105   1      //写w3数据
 106   1      w=(y>>8);
 107   1      P1=w;      //w3
 108   1      ad9851_w_clk=1;
 109   1      ad9851_w_clk=0;
 110   1      //写w4数据
 111   1      w=(y>>=0);
 112   1      P1=w;      //w4
 113   1      ad9851_w_clk=1;
 114   1      ad9851_w_clk=0;
 115   1      //移入始能
 116   1      ad9851_fq_up=1;
 117   1      ad9851_fq_up=0;
C51 COMPILER V9.53.0.0   AD9851                                                            07/06/2019 12:14:58 PAGE 3   

 118   1      }
 119          //***************************************************//
 120          //          向ad9851中写命令与数据(串口)             //
 121          //---------------------------------------------------//
 122          void ad9851_wr_serial(unsigned char w0,double frequence)
 123          {
 124   1      unsigned char i,w;
 125   1      long int y;
 126   1      double x;
 127   1      //计算频率的HEX值
 128   1      x=4294967295/180;//适合180M晶振/180为最终时钟频率（或30M六倍频）
 129   1      //如果时钟频率不为180MHZ，修改该处的频率值，单位MHz  ！！！
 130   1      frequence=frequence/1000000;
 131   1      frequence=frequence*x;
 132   1      y=frequence;
 133   1      //写w4数据
 134   1      w=(y>>=0);
 135   1      for(i=0;i<8;i++)
 136   1      {
 137   2      ad9851_bit_data=(w>>i)&0x01;
 138   2      ad9851_w_clk=1;
 139   2      ad9851_w_clk=0;
 140   2      }
 141   1      //写w3数据
 142   1      w=(y>>8);
 143   1      for(i=0;i<8;i++)
 144   1      {
 145   2      ad9851_bit_data=(w>>i)&0x01;
 146   2      ad9851_w_clk=1;
 147   2      ad9851_w_clk=0;
 148   2      }
 149   1      //写w2数据
 150   1      w=(y>>16);
 151   1      for(i=0;i<8;i++)
 152   1      {
 153   2      ad9851_bit_data=(w>>i)&0x01;
 154   2      ad9851_w_clk=1;
 155   2      ad9851_w_clk=0;
 156   2      }
 157   1      //写w1数据
 158   1      w=(y>>24);
 159   1      for(i=0;i<8;i++)
 160   1      {
 161   2      ad9851_bit_data=(w>>i)&0x01;
 162   2      ad9851_w_clk=1;
 163   2      ad9851_w_clk=0;
 164   2      }
 165   1      //写w0数据
 166   1      w=w0;   
 167   1      for(i=0;i<8;i++)
 168   1      {
 169   2      ad9851_bit_data=(w>>i)&0x01;
 170   2      ad9851_w_clk=1;
 171   2      ad9851_w_clk=0;
 172   2      }
 173   1      //移入始能
 174   1      ad9851_fq_up=1;
 175   1      ad9851_fq_up=0;
 176   1      }
 177          //***************************************************//
 178          //                   测试程序1000Hz                  //
 179          //---------------------------------------------------//
C51 COMPILER V9.53.0.0   AD9851                                                            07/06/2019 12:14:58 PAGE 4   

 180          main()
 181          {
 182   1      P0=0x00;
 183   1      P1=0x00;
 184   1      P2=0x00;
 185   1      P3=0x00;
 186   1      //---------------------------------------------------//
 187   1      //并行写1000Hz程序
 188   1      //ad9851_reset();
 189   1      //ad9851_wr_parrel(0x01,1000);
 190   1      //0X01为开六备频
 191   1      //ad9851_wr_parrel(0x00,1000);
 192   1      //0X00为不开六备频
 193   1      //---------------------------------------------------//
 194   1      //---------------------------------------------------//
 195   1      //串行写1000Hz程序
 196   1      ad9851_reset_serial();
 197   1      ad9851_wr_serial(0x01,1000);
 198   1      //0X01为开六备频
 199   1      //ad9851_wr_serial(0x00,1000);
 200   1      //0X00为不开六备频
 201   1      //---------------------------------------------------//
 202   1      while(1)
 203   1      {
 204   2      }
 205   1      }
 206          
 207          
 208          
 209          
 210          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    480    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
