C51 COMPILER V9.53.0.0   AD9851                                                            07/06/2019 12:14:34 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE AD9851
OBJECT MODULE PLACED IN ad9851.OBJ
COMPILER INVOKED BY: E:\Programe\keil 51\C51\BIN\C51.EXE ad9851.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          
   2          //***************************************************//
   3          //                  子程序说明                       //
   4          //***************************************************//
   5          //函数1:  ad9851_reset()
   6          //        复位ad9851，之后为并口写入模式        
   7          //函数2:  ad9851_reset_serial()
   8          //        复位ad9851，之后为串口写入模式
   9          //函数3:  ad9851_wr_parrel(unsigned char w0,double frequence)
  10          //        并口写ad9851数据，w0为ad9851中w0的数据，frequence
  11          //        为写入的频率  
  12          //函数4:  ad9851_wr_serial(unsigned char w0,double frequence)
  13          //        串口写ad9851数据，w0为ad9851中w0的数据，frequence
  14          //        为写入的频率  
  15          //需定义的位：
  16                   //ad9851_w_clk    ;
  17                   //ad9851_fq_up    ;
  18                   //ad9851_rest     ;
  19                   //ad9851_bit_data ;
  20          //例：
  21                   //sbit ad9851_w_clk    =P2^2;
  22                   //sbit ad9851_fq_up    =P2^1;
  23                   //sbit ad9851_rest     =P2^0;
  24                   //sbit ad9851_bit_data =P1^7;
  25          //***************************************************//
  26          //                 写数据说明                        //
  27          //***************************************************//
  28          //写数据例：
  29          //       ad9851_reset()
  30          //       wr_lcd02_data(unsigned char x)
  31          //       ad9851_wr_parrel(0x01,1000)
  32          //       ad9851_wr_serial(0x01,1000)
  33          //***************************************************//
  34          //---------------------------------------------------//
  35          //                   程序                            //
  36          //---------------------------------------------------//
  37          # include <reg51.h>
  38          # include <stdio.h>
  39          # include <intrins.h>
  40          sbit ad9851_w_clk    =P2^2;  //P2.2口接AD9851的w_clk脚/PIN7
  41          sbit ad9851_fq_up    =P2^1;  //P2.1口接AD9851的fq_up脚/PIN8
  42          sbit ad9851_rest     =P2^0;  //P2.0口接AD9851的rest脚/PIN12
  43          sbit ad9851_bit_data =P1^7;  //P1.7口接AD9851的D7脚/PIN25
  44          //P1为8位数据口
  45          //***************************************************//
  46          //              ad9851复位(并口模式)                 //
  47          //---------------------------------------------------//
  48          void ad9851_reset()
  49          {
  50   1      ad9851_w_clk=0;
  51   1      ad9851_fq_up=0;
  52   1      //rest信号
  53   1      ad9851_rest=0;
  54   1      ad9851_rest=1;
  55   1      ad9851_rest=0;
C51 COMPILER V9.53.0.0   AD9851                                                            07/06/2019 12:14:34 PAGE 2   

  56   1      }
  57          //***************************************************//
  58          //              ad9851复位(并口模式)                 //
  59          //---------------------------------------------------//
  60          void ad9851_reset_serial()
  61          {
  62   1      ad9851_w_clk=0;
  63   1      ad9851_fq_up=0;
  64   1      //rest信号
  65   1      ad9851_rest=0;
  66   1      ad9851_rest=1;
  67   1      ad9851_rest=0;
  68   1      //w_clk信号
  69   1      ad9851_w_clk=0;
  70   1      ad9851_w_clk=1;
  71   1      ad9851_w_clk=0;
  72   1      //fq_up信号
  73   1      ad9851_fq_up=0;
  74   1      ad9851_fq_up=1;
  75   1      ad9851_fq_up=0;
  76   1      }
  77          //***************************************************//
  78          //          向ad9851中写命令与数据(并口)             //
  79          //---------------------------------------------------//
  80          void ad9851_wr_parrel(unsigned char w0,double frequence)
  81          {
  82   1      unsigned char w;
  83   1      long int y;
  84   1      double x;
  85   1      //计算频率的HEX值
  86   1      x=4294967295/180;//适合180M晶振/180为最终时钟频率（或30M六倍频）
  87   1      //如果时钟频率不为180MHZ，修改该处的频率值，单位MHz ！！！
  88   1      frequence=frequence/1000000;
  89   1      frequence=frequence*x;
  90   1      y=frequence;
  91   1      //写w0数据
  92   1      w=w0;   
  93   1      P1=w;      //w0
  94   1      ad9851_w_clk=1;
  95   1      ad9851_w_clk=0;
  96   1      //写w1数据
  97   1      w=(y>>24);
  98   1      P1=w;      //w1
  99   1      ad9851_w_clk=1;
 100   1      ad9851_w_clk=0;
 101   1      //写w2数据
 102   1      w=(y>>16);
 103   1      P1=w;      //w2
 104   1      ad9851_w_clk=1;
 105   1      ad9851_w_clk=0;
 106   1      //写w3数据
 107   1      w=(y>>8);
 108   1      P1=w;      //w3
 109   1      ad9851_w_clk=1;
 110   1      ad9851_w_clk=0;
 111   1      //写w4数据
 112   1      w=(y>>=0);
 113   1      P1=w;      //w4
 114   1      ad9851_w_clk=1;
 115   1      ad9851_w_clk=0;
 116   1      //移入始能
 117   1      ad9851_fq_up=1;
C51 COMPILER V9.53.0.0   AD9851                                                            07/06/2019 12:14:34 PAGE 3   

 118   1      ad9851_fq_up=0;
 119   1      }
 120          //***************************************************//
 121          //          向ad9851中写命令与数据(串口)             //
 122          //---------------------------------------------------//
 123          void ad9851_wr_serial(unsigned char w0,double frequence)
 124          {
 125   1      unsigned char i,w;
 126   1      long int y;
 127   1      double x;
 128   1      //计算频率的HEX值
 129   1      x=4294967295/180;//适合180M晶振/180为最终时钟频率（或30M六倍频）
 130   1      //如果时钟频率不为180MHZ，修改该处的频率值，单位MHz  ！！！
 131   1      frequence=frequence/1000000;
 132   1      frequence=frequence*x;
 133   1      y=frequence;
 134   1      //写w4数据
 135   1      w=(y>>=0);
 136   1      for(i=0;i<8;i++)
 137   1      {
 138   2      ad9851_bit_data=(w>>i)&0x01;
 139   2      ad9851_w_clk=1;
 140   2      ad9851_w_clk=0;
 141   2      }
 142   1      //写w3数据
 143   1      w=(y>>8);
 144   1      for(i=0;i<8;i++)
 145   1      {
 146   2      ad9851_bit_data=(w>>i)&0x01;
 147   2      ad9851_w_clk=1;
 148   2      ad9851_w_clk=0;
 149   2      }
 150   1      //写w2数据
 151   1      w=(y>>16);
 152   1      for(i=0;i<8;i++)
 153   1      {
 154   2      ad9851_bit_data=(w>>i)&0x01;
 155   2      ad9851_w_clk=1;
 156   2      ad9851_w_clk=0;
 157   2      }
 158   1      //写w1数据
 159   1      w=(y>>24);
 160   1      for(i=0;i<8;i++)
 161   1      {
 162   2      ad9851_bit_data=(w>>i)&0x01;
 163   2      ad9851_w_clk=1;
 164   2      ad9851_w_clk=0;
 165   2      }
 166   1      //写w0数据
 167   1      w=w0;   
 168   1      for(i=0;i<8;i++)
 169   1      {
 170   2      ad9851_bit_data=(w>>i)&0x01;
 171   2      ad9851_w_clk=1;
 172   2      ad9851_w_clk=0;
 173   2      }
 174   1      //移入始能
 175   1      ad9851_fq_up=1;
 176   1      ad9851_fq_up=0;
 177   1      }
 178          //***************************************************//
 179          //                   测试程序1000Hz                  //
C51 COMPILER V9.53.0.0   AD9851                                                            07/06/2019 12:14:34 PAGE 4   

 180          //---------------------------------------------------//
 181          main()
 182          {
 183   1      P0=0x00;
 184   1      P1=0x00;
 185   1      P2=0x00;
 186   1      P3=0x00;
 187   1      //---------------------------------------------------//
 188   1      //并行写1000Hz程序
 189   1      ad9851_reset();
 190   1      ad9851_wr_parrel(0x01,100000);
 191   1      //0X01为开六备频
 192   1      //ad9851_wr_parrel(0x00,1000);
 193   1      //0X00为不开六备频
 194   1      //---------------------------------------------------//
 195   1      //---------------------------------------------------//
 196   1      //串行写1000Hz程序
 197   1      //ad9851_reset_serial();
 198   1      //ad9851_wr_serial(0x01,1000);
 199   1      //0X01为开六备频
 200   1      //ad9851_wr_serial(0x00,1000);
 201   1      //0X00为不开六备频
 202   1      //---------------------------------------------------//
 203   1      while(1)
 204   1      {
 205   2      }
 206   1      }
 207          
 208          
 209          
 210          
 211          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    481    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      26
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
